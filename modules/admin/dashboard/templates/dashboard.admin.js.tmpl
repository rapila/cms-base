jQuery(document).ready(function() {
	var db = AdminInterface.content.find('#dashboard-columns');
	
	var dashboard_layout_icons = {
		"2cols2thirds": '\ue624',
		"2cols3cols": '\ue623',
		"2columns": '\ue622',
		"3columns": '\ue620',
		"head3cols": '\ue621'
	};
	
	var add_to_column = function(column_name, skeleton) {
		var column = db.find('.dashboard-column#'+column_name);
		if(column.length !== 1) {
			column = db.find('.dashboard-column').eq(0);
		}
		column.append(skeleton.container);
		column.data('dashboardSkeleton', skeleton);
	};
	
	Widget.create('dashboard_control', function(dashboard_control) {
		
		function create_module(settings) {
			var module = jQuery.extend(true, {
				config: {},
				color: '#555',
				collapsed: false,
				type: null,
				contrastColor: 'white'
			}, settings || {});
			if(!module.uid) {
				module.uid = Widget.uuid();
			}
			return module;
		}
		
		function create_skeleton(module) {
			var uid = module.uid;
			var container = Widget.parseHTML('{{includeTemplate=container}}').hide();
			var heading = container.find('.dashboard-widget-head h3').text(module.title);
			container.attr('id', uid);
			container.css({backgroundColor: module.color});
			heading.css({color: module.contrastColor});
			
			var skeleton = {
				module: module,
				container: container,
				heading: heading,
				content: container.find('.dashboard-widget-content'),
				collapse: function() {
					container.addClass('collapsed');
				}
			};
			
			//Change handlers
			container.bind('db-configured.dashboard', function(event) {
				module.color = container.css('backgroundColor');
				module.title = heading.text();
				module.contrastColor = heading.css('color');
				if(!skeleton.config_form) {
					//Still uninitialized
					return;
				}
				skeleton.config_form.triggerHandler('db-configured'); //For Rich-Text areas and other elements that need to clean up before serializeArrayKV gives the correct value
				module.config = skeleton.config_form.serializeArrayKV();
				if(skeleton.widget.changed_dashboard_config) {
					skeleton.widget.settings.dashboard = jQuery.extend(skeleton.widget.settings.dashboard || {}, module.config);
					skeleton.widget.changed_dashboard_config();
				}
				dashboard_control.saveSettings(uid, module);
			});
			container.bind('db-collapsed.dashboard', function(event, state) {
				module.collapsed = state;
				dashboard_control.changeCollapsed(uid, state);
			});
			container.bind('db-moved.dashboard', function(event, move) {
				module.container = move.to;
				dashboard_control.move(uid, move.to, move.pos);
			});
			container.bind('db-removing.dashboard', function(event) {
				Widget.confirm('{{writeString=wns.dashboard.remove}}', '{{writeString=wns.dashboard.remove_widget}}', function(removed) {
					if(removed) {
						dashboard_control.remove(uid, function() {
							container.unbind('.dashboard');
							container.remove();
							update_empty_message();
						});
					}
				});
			});
			
			return skeleton;
		};
		
		function init_widget(skeleton) {
			var module = skeleton.module;
			if(module.collapsed) {
				skeleton.collapse();
				skeleton.container.one('db-collapsed', arguments.callee.bind(this, skeleton));
				skeleton.container.show();
				return;
			}
			Widget.createWithElement(module.type, function(widget) {
				skeleton.widget = widget;
				widget.settings.is_dashboard = true;
				widget.settings.dashboard = jQuery.extend(widget.settings.dashboard || {}, module.config);
				widget.handle('element_set', function(event, element) {
					skeleton.content.append(element);
				});
				
				//Config area
				var form = (widget.dashboard_config_form ? widget.dashboard_config_form() : jQuery('<form/>')).unserialize(widget.settings.dashboard);
				Widget.callStatic('detail', 'clickable_labels_for', form);
				skeleton.config_form = form;
				form.appendTo(skeleton.container.find('.dashboard-edit-box'));
				form.bind('submit', function(event) {
					event.preventDefault();
				});
				skeleton.container.show();
			}, jQuery.noop);
		};
		
		function reload() {
			dashboard_control.template(function(template) {
				//Clear elements and bound handlers
				db.find('.dashboard-widget').unbind('.dashboard').empty();
				
				//Reload
				db.html(template);
				dashboard_control.allDashboardModules(function(modules) {
					var skeletons = [];
					jQuery.each(modules, function(i, module) {
						module = create_module(module);
						var skeleton = create_skeleton(module);
						add_to_column(module.container, skeleton);
						skeletons.push(skeleton);
					});
					
					//Init the dashboard, init widgets afterwards
					Dashboard.init();
					
					jQuery.each(skeletons, function(i, skeleton) {
						init_widget(skeleton);
					});
					update_empty_message();
				});
			});
		}
		
		function update_empty_message() {
			var has_widgets = AdminInterface.content.find('.dashboard-widget').length !== 0;
			AdminInterface.content[has_widgets ? 'removeClass' : 'addClass']('empty-dashboard');
		}
		

		AdminInterface.info_bar.prepareWidget(function(info_bar) {
			dashboard_control.listDashboardModules(true, function(modules) {
				info_bar.add_button('add-new-item', function() {
					var dialog = Widget.parseHTML('{{includeTemplate=add_dialog}}');
					
					var columns = {};
					db.find('.dashboard-column').each(function() {
						columns[this.id] = this.id;
					});
					var column = dialog.find('select[name=column]').populate(columns);
					var type = dialog.find('select[name=type]').populate(modules);
					var buttons = [
						{
							text: "{{writeString=wns.add}}",
							'class': 'primary ui-state-highlight',
							click: function() {
								var module = create_module({
									type: type.val(),
									title: type.find(':checked').text(),
									container: column.val()
								});
								dashboard_control.saveSettings(module.uid, module);
								var skeleton = create_skeleton(module);
								add_to_column(module.container, skeleton);
								update_empty_message();
				
								//Add the controls
								Dashboard.addWidgetControls();
								Dashboard.makeSortable();
				
								init_widget(skeleton);
								dialog.dialog("destroy");
							}
						},
						{
							text: "{{writeString=wns.cancel}}",
							'class': 'secondary',
							click: function() {
								dialog.dialog("destroy");
							}
						}
					];
					dialog.dialog({
						buttons: buttons
					});
				}, 'n', true, false, "{{wns.dashboard.create_widget}}", {documentation: 'dashboard.add-new-item'});
			});
			
			dashboard_control.possibleTemplates(function(templates) {
				var template_chooser = jQuery('<select/>');
				template_chooser.populate(templates);
				var options = template_chooser.find('option');
				options.each(function() {
					var option = jQuery(this);
					if(option.val() in dashboard_layout_icons) {
						option.text(dashboard_layout_icons[option.val()]);
						option.addClass('rapila-icon');
					}
				});
				template_chooser.val(dashboard_control.getLayoutName());
				template_chooser.change(function() {
					var is_icon = options.filter('[value='+template_chooser.val()+']').hasClass('rapila-icon');
					template_chooser[is_icon ? 'addClass' : 'removeClass']('rapila-icon');
					dashboard_control.setLayoutName(template_chooser.val());
					reload();
				});
				template_chooser.change();
				info_bar.add_element(template_chooser, true, false, 't', {documentation: 'dashboard.template-chooser'});
			});
		});
	});
});
