Widget.types.link_input = {
	prepare: function() {
		var _this = this;
		var optgroup = jQuery('<optgroup/>');
		var option = jQuery('<option/>');
		this.externalLinks(function(link_categories) {
			jQuery.each(link_categories, function(optgroup_label, links) {
				var cloned_optgroup = optgroup.clone().attr('label', optgroup_label).appendTo(_this._element);
				jQuery.each(links, function(id, name) {
					option.clone().val(id).text(name).appendTo(cloned_optgroup);
				});
			});
			if(this.settings.default_value_label) {
				this._element.prepend(option.clone().attr('value', '').text(this.settings.default_value_label));
				this._element.val('');
			}
			if(this.settings.initial_value) {
				this.value(this.settings.initial_value);
			}
			if(this.settings.disabled) {
				this._element.attr('disabled', true);
			}
		});
	},

	value: function(set) {
		if(arguments.length) {
			this.settings.initial_value = set;
			return this._element.val(set);
		}
		return this._element.val();
	},

	proxy_url: function() {
		var value = this.value();
		return "{{writeLink=external_link_proxy;manager=FileManager}}/"+value;
	},

	settings: {
		default_value_label: null,
		initial_value: null
	}
};
