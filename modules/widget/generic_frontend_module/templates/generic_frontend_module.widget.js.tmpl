Widget.types.generic_frontend_module = {
	prepare: function() {
		var _this = this;
		if(this._element.attr('data-widget-type')) {
			this._element.prepareWidget(function(widget) {
				_this.internal_widget = widget;
				_this.internal_widget.notify_size_change = _this.notify_size_change;
			}, jQuery.noop);
		} else {
			this.internal_widget = null;
			var inner_widgets_prepared = [];
			this._element.widgetElements().each(function() {
				jQuery(this).prepareWidget(function() {}.deferred(inner_widgets_prepared));
			});
			jQuery.when.apply(jQuery, inner_widgets_prepared).then(function() {
				_this.currentData(function(current_data) {
					current_data && _this._element.unserialize(current_data);
				});
			});
		}
	},
	
	save: function(callback) {
		var data = null;
		if(this.internal_widget) {
			switch(this.internal_widget.widgetType) {
				case 'rich_text':
					data = this.internal_widget.get_data() || '';
					break;
			}
		}

		if(!data && this._element.is('form')) {
			data = this._element.serializeArrayKV();
		}
		
		if(!data) {
			data = '';
		}

		return data;
	},
	
	destroy: function() {
		if(!this.internal_widget) {
			return;
		}
		
		switch(this.internal_widget.widgetType) {
			case 'rich_text':
				this.internal_widget.destroy();
				break;
		}
	},
	
	resize_to: function(width, height) {
		if(!this.internal_widget) {
			return;
		}
		
		switch(this.internal_widget.widgetType) {
			case 'rich_text':
				this.internal_widget.resize_to(width, height);
				break;
		}
	}
};
