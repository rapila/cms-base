Widget.types.document_input = {
	prepare: function() {
		var _this = this;
		this.reload();
	},
	
	reload: function(selected) {
		var _this = this;
		var optgroup = jQuery('<optgroup/>');
		var option = jQuery('<option/>');
		this._element.addClass('ui-widget-content').empty();
		this.allDocumentsByCategories(function(document_categories) {
			jQuery.each(document_categories, function(optgroup_label, documents) {
				var cloned_optgroup = optgroup.clone().attr('label', optgroup_label).appendTo(_this._element);
				jQuery.each(documents, function(id, name) {
					option.clone().val(id).text(name).appendTo(cloned_optgroup);
				});
			});
			if(this.settings.default_value_label) {
				this._element.prepend(option.clone().attr('value', '').text(this.settings.default_value_label));
				this._element.val('');
			}
			if(this.settings.disabled) {
				this._element.attr('disabled', true);
			}
			if(selected !== undefined) {
				this.value(selected);
			} else if(this.settings.initial_value) {
				this.value(this.settings.initial_value);
			}
			this.fire('reloaded');
		});
	},
	
	value: function(set) {
		if(arguments.length) {
			this.settings.initial_value = set;
			this._element.val(set);
			this._element.change();
			return this._element;
		}
		return this._element.val();
	},
	
	url: function() {
		var value = this.value();
		if(isNaN(parseInt(value, 10))) {
			return value;
		}
		return "{{writeLink=display_document;manager=FileManager}}/"+value;
	},
	
	absolute_url: function() {
		var value = this.value();
		if(isNaN(parseInt(value, 10))) {
			return "{{writeConstantValue=MAIN_DIR_FE}}"+value;
		}
		return "{{writeLink=display_document;manager=FileManager}}/"+value;
	},
	
	settings: {
		default_value_label: null,
		initial_value: null,
		allow_file_upload: false
	}
};
