Widget.types.role_detail = {
	initialize: function() {
		var _this = this;
		this._element = Widget.parseHTML("{{includeTemplate=edit}}");
		this._element.find('div.hide_if_not_saved').hide();

		Widget.callStatic('detail', 'create_for_instance', this);

		this.right_content = Widget.parseHTML("{{includeTemplate=right}}");
		this.right_content.find('[name="page_id[]"]').prepareWidget();
		var rights_container = this._element.find('.rights_container');
		rights_container.delegate('.delete_right', 'click', function(event) {
			var delete_this_right = jQuery(this);
			var right_content = delete_this_right.closest('.role-rights');
			right_content.remove();
		});

		var add_new_right_button = jQuery('<a/>').addClass('add-new-item add_entry').text('Â ');
		add_new_right_button.click(function() {
			_this.right_content.clone().appendTo(rights_container);
		});
		rights_container.after(add_new_right_button);
	},
	
	fill_data: function() {
		var _this = this;
		this.detail_widget.disable();
		this.roleData(function(role_data) {
			this._element.find("input[name='role_key']").val(role_data.RoleKey).prop('disabled', role_data.RoleIsUsed);
			this._element.find("textarea[name='description']").val(role_data.Description);
			this._element.find(".updated_info").text(role_data.UpdatedInfo);
			this._element.find(".created_info").text(role_data.CreatedInfo);
			this._element.find('div.hide_if_not_saved').show();

			var rights_container = this._element.find('.rights_container').empty();
			jQuery.each(role_data.rights, function(right_id, rights_data) {
				var right_content = _this.right_content.clone();
				right_content.find('select[name="page_id[]"]').val(rights_data.PageId);
				right_content.find('input[name="is_inherited[]"]').prop('checked', rights_data.IsInherited);
				right_content.find('input[name="may_edit_page_details[]"]').prop('checked', rights_data.MayEditPageDetails);
				right_content.find('input[name="may_edit_page_contents[]"]').prop('checked', rights_data.MayEditPageContents);
				right_content.find('input[name="may_delete[]"]').prop('checked', rights_data.MayDelete);
				right_content.find('input[name="may_create_children[]"]').prop('checked', rights_data.MayCreateChildren);
				right_content.find('input[name="may_view_page[]"]').prop('checked', rights_data.MayViewPage);
				right_content.appendTo(rights_container);
			});
			this.detail_widget.set_title(this.detail_widget.settings.title = role_data.RoleKey);
			this.detail_widget.enable();		
		});
	},
	
	settings: {
		detail_widget: {
			title: "{{writeString=wns.role.create}}",
			width: 540
		}
	}
};